################################################
#                                              #
#   Arch Linux GUI i3 WM Configuration File.   #
#   Make a habit to read this file. You will   #
#   find keybindings and various other         #
#   settings here. Please see                  #
#                                              #
#       https://i3wm.org/docs/userguide.html   #
#                                              #
#   for a complete reference on moving forward #
#   from what I have provided here.            #
#                                              #
################################################


#exec_always setxkbmap -option

# This is our mod Key. Currently it is set to the Windows Key.
# You can uncomment the line below to set 'Alt' key as the mod key.
set $mod Mod1
# win key
set $mod4 Mod4

# Font for window titles. Will also be used by the bar.
font pango:monospace 15
#font pango:monospace 8
#11

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

workspace_auto_back_and_forth yes

bindsym $mod+Tab workspace back_and_forth

# start a terminal. We use kitty.
bindsym $mod+Return split h, exec i3-sensible-terminal
bindsym $mod4+Return split h, exec i3-sensible-terminal
bindsym $mod4+shift+Return split v, exec i3-sensible-terminal
bindsym $mod+shift+Return split v, exec i3-sensible-terminal

# kill focused window
#bindsym $mod+Shift+q kill
bindsym $mod+q kill

# start dmenu (a program launcher).
# bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# You have 2 options to launch rofi:
# This mode search for .desktop files in /usr/share/applications.
# This is the recommended mode. It searches for the programs as
# defined in .desktop file, with their description, and corresponding
# icons
#bindsym $mod+d exec --no-startup-id rofi -show drun -theme Monokai -icon-theme "Tela-circle" -show-icons
# bindsym $mod4+d exec --no-startup-id rofi -show drun -theme Monokai -icon-theme "Tela-circle" -show-icons
# clipboard
bindsym $mod+y exec --no-startup-id roficlip -theme Monokai -icon-theme "Tela-circle" -show-icons
# bindsym $mod+c exec --no-startup-id roficlip -theme Monokai -icon-theme "Tela-circle" -show-icons

# combi
# bindsym $mod+space exec --no-startup-id rofi -show drun -theme Monokai -icon-theme "Tela-circle" -show-icons
# rofi -show combi -combi-modi "windowcd,window,drun,run" -modi combi --theme Monokai -icon-theme  "Tela-circle" -show-icons
bindsym $mod+space exec --no-startup-id rofiall

# The other mode search for applications in /usr/bin or /usr/sbin.
# This should only be used if a program lacks a .desktop file.
# bindsym $mod+Shift+d exec --no-startup-id rofi -show run -theme Monokai

# bookmarks 
bindsym $mod+twosuperior exec --no-startup-id rofi -show firefox_bookmarks -modi "firefox_bookmarks:/home/x/ghq/github.com/milosz/rofi-firefox-bookmarks/rofi_firefox_bookmarks.sh" -theme Monokai -show-icons

# files
# always up to date locate
exec --no-startup-id watch -n1 updatedb --require-visibility 0 -o $HOME/Documents/locate.local


# Launch Polybar. Take a look at ~/.confi/polybar/config to
# configure the bar.
exec_always --no-startup-id $HOME/.config/polybar/launch.sh

# Display Wallpaper, always.
exec_always feh --bg-fill /usr/share/backgrounds/i3/wall.png

# Provide Gaps to Windows. Increase/Decrease as you like.
new_window 1pixel
gaps inner 10

#Compositor. This helps in transparency and fading.
# with fading
# exec_always picom -f
# without
exec_always picom

# clipboard manager
exec clipster -d

# password
# https://github.com/nwallace/dotfiles/blob/master/scripts/bin/rofi-pass

# screenshot manager
# see https://github.com/carnager/teiler
bindsym Print exec --no-startup-id maim -s | xclip -selection clipboard -t image/png
bindsym Shift+Print exec pinta, [class=pinta] focus

# expose like
# exec --no-startup-id i3-overview

# rename current workspace
bindsym $mod+u exec i3-input -F "rename workspace to \"$(i3-msg -t get_workspaces | jq -r \"map(select(.focused))[0].num\"):%s\"" -P 'New name for this workspace: '

# Lock Screen This will yield a black lock screen, which
# can be customized to your liking.
bindsym $mod+x exec betterlockscreen -l

# Shutdown the computer
#bindsym $mod+Shift+s exec shutdown now

#Reboot Machine
#bindsym $mod+r exec systemctl reboot

# https://faq.i3wm.org/question/239/how-do-i-suspendlockscreen-and-logout.1.html
# Suspend the system to RAM (needs swap space)
# bindsym $mod+Shift+BackSpace exec betterlockscreen -l ; systemctl suspend
bindsym $mod+shift+Delete exec "sh betterlockscreen -l && sleep 0.5 && systemctl hibernate"
bindsym $mod+Escape exec betterlockscreen -l

#tweak for delete word 
# bindsym --release $mod+Delete exec --no-startup-id xdotool key --clearmodifiers "ctrl+Delete"
# bindsym --release $mod+Delete exec --no-startup-id xdotool key --clearmodifiers "Shift+Home"
# bindsym --release $mod+Left exec --no-startup-id xdotool key --clearmodifiers "Home"

# goodies
# https://www.reddit.com/r/i3wm/comments/tduh96/whats_your_favourite_i3_hacks_you_cant_live/
# also see goteblu scripts with fzf


# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.

# The 4 lines of text above come from i3 documentation. Waking up from a suspended
# system will launch betterlockscreen
exec --no-startup-id xss-lock --transfer-sleep-lock -- betterlockscreen -l --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
# We use this. System dark theme is applied to it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
# These are examples if you would like to use pactl. We will not use this,
# but rather alsamixer.
#set $refresh_i3status killall -SIGUSR1 i3status
# bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
# bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
# bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
# bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

#Volume Control in ALG i3
bindsym XF86AudioRaiseVolume exec amixer -q set Master 5%+ unmute
bindsym XF86AudioLowerVolume exec amixer -q set Master 5%- unmute
# bindsym XF86AudioMute exec amixer -q set Master toggle
bindsym XF86AudioMute exec pactl set-sink-mute 3 toggle


##Brightness Control in ALG i3
bindsym XF86MonBrightnessUp exec sudo xbacklight -inc 10
bindsym XF86MonBrightnessDown exec sudo xbacklight -dec 10

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# The keybindings starting from here till the end of the document are
# used for navigation in the window manager

# 1A] change focus

# bindsym $mod+colon focus left
# bindsym $mod+semicolon focus right

bindsym $mod+h focus left
bindsym $mod+l focus right
bindsym $mod+j focus down
bindsym $mod+k focus up

# 1B] alternatively, you can use the cursor keys:
# bindsym $mod+Left focus left
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up
# bindsym $mod+Right focus right
# use to move words
# bindsym $mod+Down focus down
# bindsym $mod+Up focus up

# too much lag and winkey gets stuck
# bindsym --release $mod+Left exec --no-startup-id xdotool key --clearmodifiers "Home"
# bindsym --release $mod+Right exec --no-startup-id xdotool key --clearmodifiers "End"


# 2A] move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# 2B] alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# 3] split in horizontal orientation
# bindsym $mod4+h split h

# 4] split in vertical orientation
# bindsym $mod4+v split v

# 5] enter fullscreen mode for the focused container
# bindsym $mod4+f fullscreen toggle
bindsym $mod+m fullscreen toggle
bindsym F11 fullscreen toggle
bindsym $mod+F11 polybar-msg cmd toggle

bindsym $mod+s exec echo "" | rofi -dmenu | xargs -I{} xdg-open https://www.google.de/search?q={}

# 6] change container layout (stacked, tabbed, toggle split)
bindsym $mod4+s layout stacking
bindsym $mod4+w layout tabbed
bindsym $mod4+e layout toggle split

# 7] toggle tiling / floating
#bindsym $mod+Shift+space floating toggle
bindsym $mod4+Shift+space floating toggle

# 8] change focus between tiling / floating windows
bindsym $mod4+space focus mode_toggle

# 9A] focus the parent container
bindsym $mod4+a focus parent

# 9B] focus the child container
#bindsym $your_keybinding focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# anything on 9 and 10 is floating
for_window [ workspace="9" ] floating enable
for_window [ workspace="10" ] floating enable
for_window [ class="pinta" ] fullscreen enable

for_window [class="i3-overview"] floating enable
for_window [class="i3-overview"] sticky enable
no_focus [class="i3-overview"]


# quick focus firefox and vim
bindsym F9 [class="firefox"] focus
bindsym F10 [class="kitty" title="VIM$"] focus
# $mod+a 

# for_window [instance="scratchpad"] move window to scratchpad, scratchpad show
#
# for_window [class="bg_browser"] move scratchpad

# for_window [class="bg_browser"] floating enable
# for_window [class="bg_browser"] move position 277 156
# for_window [class="bg_browser"] resize set 1366 768
# for_window [class="bg_browser"] border pixel 3
# exec_always --no-startup-id firefox --class="bg_browser" &

# bindsym $sup+grave [class="bg_browser"] scratchpad show

# bindsym $mod+b exec --no-startup-id firefox --class="fg_browser"
# bindsym $mod+b exec --no-startup-id firefox


# quick access
bindsym $mod+F2 exec --no-startup-id kitty -e ranger -d ~/Downloads
# bindsym $mod+F1 exec --no-startup-id firefox -name scratchpad

# scratchpad
# bindsym twosuperior [class="bg_browser"] scratchpad show
bindsym twosuperior scratchpad show
# bindsym Ctrl+twosuperior scratchpad show
bindsym $mod+Shift+twosuperior move scratchpad
# http://christian.amsuess.com/blog/config/changed_to_i3wm/

# 10] switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym F1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym F2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym F3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym F4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

bindsym $mod+n workspace next
bindsym $mod+shift+n move to workspace next, workspace next
bindsym $mod+p workspace prev
bindsym $mod+shift+p move to workspace prev, workspace prev
bindsym $mod+Next workspace next
bindsym $mod+Prior workspace prev
bindsym $mod+o exec --no-startup-id /home/x/ghq/github.com/jytrowbridge/i3-next-available-workspace/next_available_ws.sh
bindsym $mod+shift+o exec --no-startup-id /home/x/ghq/github.com/jytrowbridge/i3-next-available-workspace/next_available_ws.sh -m


# bindsym $mod+shift+p move workspace to output up
bindsym shift+F11 move workspace to output up

# 11] move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym Shift+F1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym Shift+F2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym Shift+F3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym Shift+F4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10


# 12A] reload the configuration file
bindsym $mod+Shift+c reload
# 12B] restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# 12C] exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# 13A] resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        bindsym i move position 0px 100px
        bindsym o move position 1200px 100px
        bindsym u move position 500px 100px

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}


# 13B] Enter Resize Mode
bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available). Commented out due to use of polybar. If you want to
# use i3 bars (status or blocks) this are some examples on how you can do it.
# bar {
        #status_command i3status
        #tray_output primary
        #status_command i3status -c ~/.config/i3/i3status.conf
        #status_command i3blocks -c ~/.config/i3/i3blocks.conf
#}


# Launch a program on a certain workspace, from rofi (which may or may not have a keybinding)
# for_window [class="nameofapp"] move to workspace $wsno.
# WS No. 5 has been used as example.
# Note: You will have to launch the program from a program launcher (rofi).
#for_window [class="firefox"] move to workspace $ws5

# The following way allows programs to be launched with a
# defined keybinding, on a certain workspace, without
# touching program launcher. Assign Programs to respective
# workspaces.
# bindsym $mod+b workspace 5; exec firefox


#Multi Monitor (Dual Monitor, extended monitor)
#Replace HDMI2 with DVI-2, VGA-2, DP-2, DVI-2 etc. Get value by typing xrandr in the terminal.
#If X is a natural number, then;
#eDP-X is the display used in Laptops.
#HDMI-X is display used in Desktop connected to monitor with HDMI Cable.
#VGA-X is display used in Desktop connected to monitor with VGA Cable.

# exec --no-startup-id xrandr --output HDMI-2 --right-of HDMI-1 -s 2560x1440
exec --no-startup-id xrandr --output eDP-1 --primary --mode 2560x1440 --pos 0x0 --rotate normal --output DP-1 --off --output HDMI-1 --off --output DP-2 --off --output HDMI-2 --off
# exec --no-startup-id xrandr --output HDMI-2 --right-of HDMI-1 --auto

# exec --no-startup-id autorandr --change

# autorandr --change myt14layout

# put this in bashrc?
# exec setxkbmap -option
# exec setxkbmap -layout fr,us -option caps:escape -option ctrl:swap_lalt_lctl_lwin -option grp:rctrl_toggle
# install touchcursor-linux from git and setup for your keyboard then
# 
exec_always systemctl --user start touchcursor.service
exec setxkbmap -layout fr,us -option caps:escape -option ctrl:swap_lalt_lctl_lwin -option grp:shifts_toggle
# -option altwin:menu_win
# exec setxkbmap -layout fr -option caps:super -option ctrl:swap_lalt_lctl_lwin -option altwin:menu_win


# Display Wallpaper, always. again
exec feh --bg-fill /usr/share/backgrounds/i3/wall.png

# exec_always setxkbmap -option
# exec_always setxkbmap -layout fr -option caps:escape -option ctrl:swap_lalt_lctl_lwin -option altwin:menu_win

# remove menu win if not that key

# for mac
# exec_always setxkbmap -option
# exec_always setxkbmap -layout fr -option caps:escape -option ctrl:swap_lwin_lctl

